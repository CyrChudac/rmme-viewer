// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  display: block;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: normal;
  background-color: $navbar-background-color;
  color: $navbar-color;
  margin: 0 0 0 0;
  width: 100%;
  padding: $navbar-padding-y $navbar-padding-x;

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properties so that content nested within behave properly.
  %container-flex-properties {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }

  .container,
  .container-fluid {
    @extend %container-flex-properties;
  }
  
  .navbar-toggler {
    color: $navbar-color;
    border-color: $navbar-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: escape-svg($navbar-toggler-icon-bg);
  }

  .navbar-text {
    color: $navbar-color;
    a {
      color: $navbar-active-color;

      &:hover,
      &:focus {
        color: $navbar-active-color;
      }
    }
  }
}


// Navbar brand
//
// Used for brand, project, or site names.

// the name of the project

.navbar-brand {
  display: inline-block;
  padding-top: $navbar-brand-padding-y;
  padding-bottom: $navbar-brand-padding-y;
  margin-right: $navbar-padding-x;
  font-size: "#{$navbar-brand-font-size}%";
  line-height: inherit;
  white-space: nowrap;
  color: $navbar-brand-color;

  &:hover,
  &:focus {
    text-decoration: none;
    color: $navbar-brand-hover-color;
  }
}

.navbar-upload {
  flex-flow: row wrap;
  align-items: center; // Prevent shorter elements from growing to same height as others (e.g., small buttons growing to normal sized button height)
  color: $navbar-color;
  text-align: center;
  
}

// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

// sets the file name position

.navbar-nav {
  flex-direction: row; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
  color: $navbar-color;

  .nav-link {
    padding-right: 0;
    padding-left: 0;
    
    &:hover,
    &:focus {
      color: $navbar-hover-color;
    }

    &.disabled {
      color: $navbar-disabled-color;
    }
  }

  .dropdown-menu {
    position: static;
    float: none;
  }

  .show > .nav-link,
  .active > .nav-link,
  .nav-link.show,
  .nav-link.active {
    color: $navbar-active-color;
  }
}

// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}
